apiVersion: v1
kind: Namespace
metadata:
  name: myapp

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: 665357118005.dkr.ecr.eu-north-1.amazonaws.com/api:latest
        ports:
        - containerPort: 80
        env:
          - name: MONGODB_USER
            valueFrom:
              secretKeyRef:
                name: apps-secrets
                key: MONGODB_USER
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: apps-secrets
                key: MONGODB_PASSWORD
          - name: HTTP_PORT
            value: "80"
        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5


---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: myapp
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: app
        image: 665357118005.dkr.ecr.eu-north-1.amazonaws.com/app:latest
        ports:
        - containerPort: 80
        env:
          - name: API_HOST
            value: "api-service.myapp"
          - name: API_PORT
            value: "80"
          - name: HTTP_PORT
            value: "80"

        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5



---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: myapp
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: app
